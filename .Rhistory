shiny::runApp()
library(friends)
text_df <- tibble(friends)
main_chars <- c("Rachel Green", "Monica Geller", "Ross Geller",
"Joey Tribbiani", "Chandler Bing", "Phoebe Buffay")
# customized stop words
undesirable_words <- c("hey", "yeah", "uh", "whoa", "la", "ha",
"ow", "ooh","ho","gonna", "huh", "hmm", "woo",
"hoo","blah", "ew","woah","mmmhm","wow", "ohh", "ah",
"umm", "wanna", "hey", "y'know", "alright", "gotta", "uh", stop_words$word)
runApp()
library(tidytext)
library(tidytext)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinythemes")
runApp()
library(ggthemes)
runApp()
selected <- reactive(text_df %>% filter(speaker == input$mainChars) %>%
unnest_tokens(word, text) %>%
filter(!word %in% undesirable_words))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?renderPlot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
get_sentiments("nrc")
get_sentiments("nrc") %>% filter(word=="mother")
runApp()
runApp()
runApp()
?theme
?labs
runApp()
runApp()
runApp()
runApp()
runApp()
?theme
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paste("rachel green", ".png")
runApp()
runApp()
runApp()
?renderImage
runApp()
runApp()
runApp()
?imageOutput
?renderImage
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?theme
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?scale_color_fivethirtyeight
runApp()
?scale_color_canva
?scale_color_viridis_c
runApp()
library(wesanderson)
?wes_palette
runApp()
?scale_color_discrete
?scale_color_discrete
runApp()
?wes_palette
runApp()
runApp()
?scale_color_discrete
?scale_color_discrete
?scale_color_discrete
?scale_color_calc
?scale_color_discrete
runApp()
?wes_palette
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?theme
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(showtext)
font_add("Josef Xuereb's Friends",
regular = "Josef Xuereb s Friends - Regular.ttf",
bold = "Josef Xuereb s Friends - Bold.ttf")
font_add("Josef Xuereb's Friends",
regular = "Josef Xuereb s Friends - Regular.ttf",
bold = "Josef Xuereb s Friends - Bold.ttf")
showtext_auto()
font_family1 <- "Josef Xuereb's Friends"
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(text_df)
text_df <- tibble(friends)
text_df <- tibble(friends)
View(text_df)
runApp()
runApp()
runApp()
runApp()
?renderText
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?renderPlot
library(DT)
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='wonderwall',
token='77449D3366E416FA29AC97CEE9C255DD',
secret='wNRD9oZA6M33yTvDiq1eSJLYzCa6DpzFO5Bg5qoP')
deployApp()
forgetDeployment()
deployApp()
install_github("juliasilge/tidytext")
install.packages("install_github")
install_github("juliasilge/tidytext")
library(tidytext)
deployApp()
forgetDeployment()
deployApp()
get_sentiments("nrc")
forgetDeployment()
deployApp()
library(rsconnect)
rsconnect::setAccountInfo(name='wonderwall',
token='A982DFDD3FA999000E6A29C9BD4AEAB6',
secret='/qza9TavaFmgBPC7xhDAtix4IwEOoiZEdP5fOomP')
forgetDeployment()
deployApp()
install.packages("tidydata")
install.packages("textdata")
forgetDeployment()
deployApp()
library(rsconnect)
rsconnect::setAccountInfo(name='wonderwall',
token='A982DFDD3FA999000E6A29C9BD4AEAB6',
secret='/qza9TavaFmgBPC7xhDAtix4IwEOoiZEdP5fOomP')
forgetDeployment()
deployApp()
?menu
options(menu.graphics = TRUE)
shiny::runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='wonderwall',
token='A982DFDD3FA999000E6A29C9BD4AEAB6',
secret='/qza9TavaFmgBPC7xhDAtix4IwEOoiZEdP5fOomP')
forgetDeployment()
deployApp()
shiny::runApp()
forgetDeployment()
deployApp()
runApp()
runApp()
output$sentimentbytime <- renderPlot(
sentiment_df <- selected() %>%
group_by(season) %>%
mutate(total_words = n()) %>%
ungroup() %>%
inner_join(get_sentiments("nrc"))%>%
filter(sentiment %in% c("anger", "disgust", "fear", "joy","sadness") ) %>%
count(season, sentiment, total_words) %>%
ungroup() %>%
mutate(percent = (n / total_words))
ggplot(sentiment_df, aes(season, percent, color = sentiment)) +
geom_line(size = 1.5) +
geom_smooth(method = "lm", se = FALSE, lty = 2) +
expand_limits(y = 0)+
labs(title=paste(input$mainChars, "'s Emotions by Season")) +
scale_color_manual(values=wes_palette("Darjeeling1"))+
scale_x_continuous(name="", breaks = seq(1,10, 2), labels = c("Season 1", "Season 3", "Season 5", "Season 7", "Season 9"))+
theme_minimal()+
theme(axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.text.x=element_text(angle=36, vjust = 0.6, colour = "white", size = 11),
legend.position = "top",
axis.title = element_blank(),
plot.background = element_rect(fill = "#272B30", colour = "#272B30"),
panel.border = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid = element_line(colour = "#495464"),
text = element_text(colour = "white"),
plot.title = element_text(family = font_family1, size = 28)
), res=96
)
runApp()
runApp()
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='wonderwall',
token='77449D3366E416FA29AC97CEE9C255DD',
secret='wNRD9oZA6M33yTvDiq1eSJLYzCa6DpzFO5Bg5qoP')
forgetDeployment()
deployApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sentiment_df <- text_df %>% filter(speaker == input$mainChars) %>%
unnest_tokens(word, text) %>%
filter(!word %in% undesirable_words) %>%
inner_join(get_sentiments("nrc"))%>%
group_by(sentiment) %>%
count(word, sort = TRUE) %>%
head(8) %>%
ungroup()
text_df <- tibble(friends)
sentiment_df <- text_df %>% filter(speaker == input$mainChars) %>%
unnest_tokens(word, text) %>%
filter(!word %in% undesirable_words) %>%
inner_join(get_sentiments("nrc"))%>%
group_by(sentiment) %>%
count(word, sort = TRUE) %>%
head(8) %>%
ungroup()
sentiment_df <- text_df %>% filter(speaker == input$mainChars) %>%
unnest_tokens(word, text) %>%
filter(!word %in% undesirable_words) %>%
inner_join(get_sentiments("nrc"))%>%
group_by(sentiment) %>%
count(word, sort = TRUE) %>%
head(8) %>%
ungroup()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
lexicon_nrc()
runApp()
runApp()
lexicon_loughran()
lexicon_nrc()
lexicon_nrc_eil()
lexicon_nrc_vad()
runApp()
runApp()
runApp()
library(readxl)
nrc_df <- read_excel("nrc.xlsx")
View(nrc_df)
?read_excel()
nrc_df <- read_xlsx("nrc.xlsx")
nrc_df$Anger
nrc_df <- read_xlsx("nrc.xlsx") %>%
select(c("English(en)"), last_col(10))
nrc_df <- read_xlsx("nrc.xlsx") %>%
select(nrc_df$`English (en)...1`, last_col(10))
last_col()
?last_col
nrc_df <- read_xlsx("nrc.xlsx") %>%
select(last_col(10))
nrc_df <- read_xlsx("nrc.xlsx")
nrc_df <- read_xlsx("nrc.xlsx") %>%
select(nrc_df$`English (en)...1`, nrc_df$Joy, nrc_df$Anger, nrc_df$Disgust, nrc_df$Fear, nrc_df$Sadness)
nrc_df <- read_xlsx("nrc.xlsx")
nrc_df <- nrc_df[, c(1)]
nrc_df <- read_xlsx("nrc.xlsx")
ncol(nrc_df)
nrc_df <- nrc_df[, c(1, 113, 112, 111, 110, 108)]
nrc_df <- nrc_df[, c(1, 113, 112, 111, 110, 108)] %>%
setNames()
nrc_df <- nrc_df[, c(1, 113, 112, 111, 110, 108)]
nrc_df <- read_xlsx("nrc.xlsx")
nrc_df <- nrc_df[, c(1, 113, 112, 111, 110, 108)]
colnames(nrc_df)
nrc_df <- nrc_df %>%
rename(word='English (en)...1')
nrc_df <- nrc_df %>%
rename(word='English (en)...1') %>%
setNames(tolower())
nrc_df <- read_xlsx("nrc.xlsx")
nrc_df <- nrc_df[, c(1, 113, 112, 111, 110, 108)]
nrc_df <- nrc_df %>%
rename(word='English (en)...1') %>%
setNames(tolower())
nrc_df <- read_xlsx("nrc.xlsx")
nrc_df <- nrc_df[, c(1, 113, 112, 111, 110, 108)]
nrc_df <- nrc_df %>%
rename(word='English (en)...1') %>%
setNames(tolower(.))
nrc_df <- read_xlsx("nrc.xlsx")
nrc_df <- nrc_df[, c(1, 113, 112, 111, 110, 108)]
nrc_df <- nrc_df %>%
rename(word='English (en)...1')
runApp()
get_sentiments("nrc")
nrc_df <- read_xlsx("nrc.xlsx")
nrc_df <- nrc_df[, c(1, 113, 112, 111, 110, 108)]
nrc_df <- nrc_df %>%
rename(word='English (en)...1', anger='Anger', joy="Joy", disgust="Disgust", fear="Fear", sadness="Sadness")
?pivot_longer
nrc_df <- nrc_df %>%
pivot_longer(-word, names_to = "sentiment")
runApp()
nrc_df <- read_xlsx("nrc.xlsx")
library(readxl)
nrc_df <- read_xlsx("nrc.xlsx")
nrc_df <- nrc_df %>%
pivot_longer(-word, names_to = "sentiment")
library(tidyverse)
nrc_df <- nrc_df %>%
pivot_longer(-word, names_to = "sentiment")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
lexicon_nrc()
nrc_df
df <- lexicon_nrc()
write_csv("nrc", df)
?write_csv
write_csv(df)
class(df)
write_csv(df)
write_csv(df, "nrc.xlsx")
write_csv(df, "nrc.csv")
lexicon_nrc()
runApp()
shiny::runApp()
?theme
runApp()
runApp()
runApp()
runApp()
?tags$div
?div
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
